type File {
  _id: String
  filename: String
  mimeType: String
}

type Tenant {
  _id: String
  firstName: String
  lastName: String
  email: String
}

type Renting {
  _id: String
  status: String
  tenant: Tenant
}

type Property {
  _id: String
  title: String
  address: String
  surface: Int
  rooms: [Room]
  pictures: [File]
}

type Ad {
  _id: String
  title: String
  description: String
  rentalUnit: Int
  property: Property
  createdAt: Float
}

type Renting {
  _id: String
  status: String
  tenant: Tenant
  ad: Ad
}

input CreateRentingInput {
  status: String!
  tenant: String!
  ad: String!
}

input UpdateRentingInput {
  id: Int!
  status: String
}

type Query {
  rentings: [Renting]!
  renting(id: Int!): Renting
}

type Mutation {
  createRenting(createRentingInput: CreateRentingInput!): Renting!
  updateRenting(updateRentingInput: UpdateRentingInput!): Renting!
}
